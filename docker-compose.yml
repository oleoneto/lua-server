version: '2.4'

services:

  web:
    container_name: "lua-web"
    labels:
      com.lualms.web.description: "Application Service"
    build:
      context: ../lua_server
      args:
        buildno: 1
    volumes:
      - ./lua_server/:/usr/src/application/
      - staticfiles:/var/www/staticfiles
      - mediafiles:/var/www/mediafiles
    env_file:
      - ../env/.production/.docker.env
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - luanet
    depends_on:
      - db
    # command: python3 manage.py runserver 0.0.0.0:8000
    command: gunicorn lua_server.wsgi:application --bind 0.0.0.0:8000 --workers 3


  db:
    container_name: "lua-db"
    image: postgres:10.5-alpine
    labels:
      com.lualms.db.description: "Database Service"
    volumes:
      - database:/var/lib/postgresql/data/
      - database_backups:/backups
    networks:
      - luanet
    restart: always
    # command: "createdb DB_NAME -O owner -U postgres"


  nginx:
    container_name: "lua-nginx"
    labels:
      com.lualms.nginx.description: "Web Service"
    build:
      context: nginx
      dockerfile: nginx/nginx.dockerfile
      args:
        buildno: 1
    volumes:
      - staticfiles:/var/www/staticfiles
      - mediafiles:/var/www/mediafiles
      - nginx:/etc/nginx/conf.d
      - logs:/var/www/logs/lualms
    ports:
      - "80:80"
      - "443:443"
    networks:
      - luanet
    depends_on:
      - web


volumes:
  nginx:
  logs:
  staticfiles:
  mediafiles:
  database:
  database_backups:


networks:
  luanet:
    driver: bridge
